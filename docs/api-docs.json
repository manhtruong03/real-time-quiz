{"openapi":"3.0.1","info":{"title":"vui_quiz_backend API","description":"API documentation for vui_quiz_backend","termsOfService":"http://swagger.io/terms/","license":{"name":"Apache 2.0","url":"http://springdoc.org"},"version":"v1.0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"security":[{"bearerAuth":[]}],"tags":[{"name":"Admin Game Reports API","description":"Endpoints for administrators to manage and view game session reports."},{"name":"Admin Tag Management","description":"APIs for administrators to manage tags."},{"name":"Admin User Account Management","description":"APIs for administrators to manage user accounts"},{"name":"File Management API","description":"Endpoints for uploading and serving files."},{"name":"Quiz Management API","description":"Endpoints for creating, retrieving, and managing quizzes"},{"name":"Game Reports API","description":"Endpoints for retrieving game session reports and statistics."},{"name":"Game Result API","description":"Endpoints for managing game session results"},{"name":"Admin Image Management","description":"APIs for administrators to manage images"}],"paths":{"/api/admin/users/{userId}":{"get":{"tags":["Admin User Account Management"],"summary":"Get user account by ID","description":"Retrieves a specific user account by its UUID. Requires ADMIN role.","operationId":"getUserById","parameters":[{"name":"userId","in":"path","description":"UUID of the user account to retrieve","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successfully retrieved user account details","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserAccountAdminViewDTO"}}}},"404":{"description":"User account not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserAccountAdminViewDTO"}}}},"403":{"description":"Forbidden - User does not have ADMIN role","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserAccountAdminViewDTO"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid","content":{"*/*":{"schema":{"$ref":"#/components/schemas/UserAccountAdminViewDTO"}}}}},"security":[{"bearerAuth":[]}]},"put":{"tags":["Admin User Account Management"],"summary":"Update an existing user account by an administrator","description":"Allows an administrator to update details of an existing user account such as username, email, role, and storage limit. Password updates should be handled by a separate dedicated endpoint. Requires ADMIN role. Only non-null fields in the request body will be considered for update.","operationId":"updateUserAccount","parameters":[{"name":"userId","in":"path","description":"UUID of the user account to update","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"JSON object containing the user account fields to update. Fields not provided or null will not be changed.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserAccountUpdateRequestDTO"}}},"required":true},"responses":{"403":{"description":"Forbidden - User does not have ADMIN role","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Invalid input data (e.g., validation error on DTO, username/email conflict)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"User account not found with the given UUID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"200":{"description":"User account updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserAccountAdminViewDTO"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Admin User Account Management"],"summary":"Soft delete a user account by an administrator","description":"Allows an administrator to soft-delete a user account. The account will be marked as deleted and will no longer be accessible through standard APIs or be able to log in. Requires ADMIN role.","operationId":"deleteUserAccount","parameters":[{"name":"userId","in":"path","description":"UUID of the user account to soft-delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"404":{"description":"User account not found with the given UUID (or already deleted)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"403":{"description":"Forbidden - User does not have ADMIN role","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"User account soft-deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/tags/{tagId}":{"get":{"tags":["Admin Tag Management"],"summary":"Get tag details by ID","description":"Retrieves detailed information for a specific tag by its UUID.","operationId":"getTagById","parameters":[{"name":"tagId","in":"path","description":"UUID of the tag to retrieve.","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Successfully retrieved tag details.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagAdminViewDTO"}}}},"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/TagAdminViewDTO"}}}},"404":{"description":"Tag not found with the given UUID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/TagAdminViewDTO"}}}}},"security":[{"bearerAuth":[]}]},"put":{"tags":["Admin Tag Management"],"summary":"Update tag details by ID","description":"Allows an administrator to update the name and/or description of an existing tag.","operationId":"updateTag","parameters":[{"name":"tagId","in":"path","description":"UUID of the tag to update.","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagUpdateRequestDTO"}}},"required":true},"responses":{"200":{"description":"Tag updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagAdminViewDTO"}}}},"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"Tag not found with the given UUID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"400":{"description":"Invalid input data (e.g., validation error, new tag name already exists).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Admin Tag Management"],"summary":"Delete a tag by ID","description":"Soft-deletes a tag. The tag will no longer be visible or usable but remains in the database.","operationId":"deleteTag","parameters":[{"name":"tagId","in":"path","description":"UUID of the tag to delete.","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"200":{"description":"Tag deleted successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"404":{"description":"Tag not found with the given UUID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"204":{"description":"Tag deleted successfully (alternative response if no content body).","content":{"*/*":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/images/{imageId}":{"get":{"tags":["Admin Image Management"],"summary":"Get image details by ID","description":"Retrieves detailed information for a specific image record by its UUID. Requires ADMIN role.","operationId":"getImageById","parameters":[{"name":"imageId","in":"path","description":"UUID of the image record to retrieve.","required":true,"schema":{"type":"string","format":"uuid"},"example":"a1b2c3d4-e5f6-7890-1234-567890abcdef"}],"responses":{"404":{"description":"Image record not found with the given UUID.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ImageStorageAdminViewDTO"}}}},"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ImageStorageAdminViewDTO"}}}},"200":{"description":"Successfully retrieved image details.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImageStorageAdminViewDTO"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ImageStorageAdminViewDTO"}}}}},"security":[{"bearerAuth":[]}]},"put":{"tags":["Admin Image Management"],"summary":"Update image metadata by ID","description":"Allows an administrator to update metadata of an existing image record, such as its original filename. Only non-null fields in the request body that represent a change will be processed. Requires ADMIN role.","operationId":"updateImageMetadata","parameters":[{"name":"imageId","in":"path","description":"UUID of the image record to update.","required":true,"schema":{"type":"string","format":"uuid"},"example":"a1b2c3d4-e5f6-7890-1234-567890abcdef"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImageStorageUpdateDTO"}}},"required":true},"responses":{"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Bad Request - Invalid input data (e.g., validation error).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"404":{"description":"Image record not found with the given UUID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"200":{"description":"Image metadata updated successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImageStorageAdminViewDTO"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Internal Server Error - Unexpected error during processing.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Admin Image Management"],"summary":"Delete an image by ID","description":"Deletes an image record from the database and its corresponding physical file from storage. Updates the original creator's storage quota. Requires ADMIN role.","operationId":"deleteImage","parameters":[{"name":"imageId","in":"path","description":"UUID of the image record to delete.","required":true,"schema":{"type":"string","format":"uuid"},"example":"a1b2c3d4-e5f6-7890-1234-567890abcdef"}],"responses":{"404":{"description":"Image record not found with the given UUID.","content":{"*/*":{"schema":{"type":"object"}}}},"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Internal server error during deletion process.","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Image deleted successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]}},"/api/upload-test-image":{"post":{"tags":["File Management API"],"summary":"Upload a test image (Temporary - Stage 2)","description":"A temporary endpoint for testing single image uploads. This version also creates an ImageStorage record in the database. Accepts 'imageFile' as the multipart file part name. A mock 'creatorId' can be provided as a request parameter for testing.","operationId":"uploadTestImage","parameters":[{"name":"creatorId","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"required":["imageFile"],"type":"object","properties":{"imageFile":{"type":"string","format":"binary"}}}}}},"responses":{"400":{"description":"Bad request (e.g., no file, invalid file type)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"200":{"description":"Image uploaded and record created successfully. Returns image details.","content":{"application/json":{"schema":{"type":"string","example":{"imageId":"uuid-goes-here","originalFileName":"cat.jpg","storedFileName":"uuid.jpg","publicUrl":"http://localhost:8080/files/images/uuid.jpg","contentType":"image/jpeg","size":12345}}}}},"500":{"description":"Internal server error during file upload","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}}}},"/api/session/join/{gamePin}":{"post":{"tags":["game-session-controller"],"operationId":"joinSession","parameters":[{"name":"gamePin","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}}}}},"/api/session/finalize":{"post":{"tags":["Game Result API"],"summary":"Finalize a game session and save results","description":"Receives the complete game session data after it has ended and stores it in the database. This includes session details, player scores, slide information, and individual answers.","operationId":"finalizeSession","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SessionFinalizationDto"}}},"required":true},"responses":{"500":{"description":"Internal server error during processing","content":{"*/*":{"schema":{"type":"object"}}}},"201":{"description":"Game session results saved successfully","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Invalid input data","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Unauthorized - User not authenticated or not authorized","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]}},"/api/session/create":{"post":{"tags":["game-session-controller"],"operationId":"createSession","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"string"}}}}}}}},"/api/quizzes":{"post":{"tags":["Quiz Management API"],"summary":"Create a new quiz with explicitly keyed images","description":"Creates a new quiz by processing a multipart/form-data request. The request must include:\n1.  A **`quizData` part**: This part contains the quiz's metadata as a JSON string, conforming to the `QuizDTO` schema.\n    It is crucial that this part has a `Content-Type` header of `application/json`.\n    - The `QuizDTO` should specify `coverImageUploadKey` (string, optional) for the quiz's cover image.\n    - Each `QuestionDTO` within `quizData` can specify `questionImageUploadKey` (string, optional) for its associated image.\n2.  **Image file parts**: For each `coverImageUploadKey` or `questionImageUploadKey` provided in the `quizData` JSON,\n    a corresponding binary file part must be sent.\n    - The **name of each image file part MUST exactly match** the corresponding `uploadKey` string from `quizData`.\n    For instance, if `quizData` includes `\"coverImageUploadKey\": \"promoImage123\"`, then the multipart request must contain\n    a file part named `promoImage123` with the image data.\n","operationId":"createQuiz","requestBody":{"description":"Multipart request containing quiz data and image files.","content":{"multipart/form-data":{"schema":{"required":["quizData"],"type":"object"},"examples":{"Quiz with Cover and Question Image":{"summary":"Example multipart request payload","description":"Illustrates sending `quizData` (as application/json) and two image files.\nThe part names for images (`cover123`, `q_image_abc`) MUST match the keys specified in `quizData`.\n(Note: Binary data is represented conceptually below).\n","value":"--boundary\nContent-Disposition: form-data; name=\"quizData\"\nContent-Type: application/json\n\n{\n  \"title\": \"My Keyed Image Quiz\",\n  \"coverImageUploadKey\": \"cover123\",\n  \"questions\": [\n    {\n      \"title\": \"Question 1 with Image\",\n      \"questionImageUploadKey\": \"q_image_abc\"\n      /* other question props */\n    }\n  ]\n  /* other quiz props */\n}\n--boundary\nContent-Disposition: form-data; name=\"cover123\"; filename=\"cover.jpg\"\nContent-Type: image/jpeg\n\n(binary image data for cover.jpg)\n--boundary\nContent-Disposition: form-data; name=\"q_image_abc\"; filename=\"question_pic.png\"\nContent-Type: image/png\n\n(binary image data for question_pic.png)\n--boundary--\n"}},"encoding":{"quizData":{"contentType":"application/json"}}}},"required":true},"responses":{"201":{"description":"Quiz created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuizDTO"}}}},"400":{"description":"Invalid input data (e.g., JSON parsing error, validation error, file type error)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]}},"/api/auth/signup":{"post":{"tags":["auth-controller"],"summary":"Register a new user","description":"Creates a new user account.","operationId":"registerUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignupRequest"}}},"required":true},"responses":{"200":{"description":"User registered successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"400":{"description":"Invalid request data (e.g., username/email already exists)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}}}},"/api/auth/signin":{"post":{"tags":["auth-controller"],"summary":"Authenticate user and get JWT","description":"Provides a JWT token upon successful authentication.","operationId":"authenticateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"400":{"description":"Invalid request payload","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"200":{"description":"Successfully authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JwtResponse"}}}},"401":{"description":"Unauthorized - Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}}}},"/api/admin/users":{"get":{"tags":["Admin User Account Management"],"summary":"List all user accounts (paginated)","description":"Retrieves a paginated list of all user accounts. Requires ADMIN role.","operationId":"getAllUsers","parameters":[{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=username,asc)","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"Successfully retrieved list of user accounts","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}},"403":{"description":"Forbidden - User does not have ADMIN role","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageUserAccountAdminViewDTO"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageUserAccountAdminViewDTO"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Admin User Account Management"],"summary":"Create a new user account by an administrator","description":"Allows an administrator to create a new user account with specified details including username, password, email (optional), and role. Requires ADMIN role.","operationId":"createUserAccount","requestBody":{"description":"Details of the user account to create.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserAccountCreationRequestDTO"}}},"required":true},"responses":{"400":{"description":"Invalid input data (e.g., validation error, username/email already exists)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"201":{"description":"User account created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserAccountAdminViewDTO"}}}},"403":{"description":"Forbidden - User does not have ADMIN role","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/users/{userId}/set-password":{"post":{"tags":["Admin User Account Management"],"summary":"Set or reset a user's password by an administrator","description":"Allows an administrator to set a new password for a specified user account. Requires ADMIN role.","operationId":"adminSetUserPassword","parameters":[{"name":"userId","in":"path","description":"UUID of the user account whose password will be set/reset","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"JSON object containing the new password.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AdminSetPasswordRequestDTO"}}},"required":true},"responses":{"200":{"description":"Password updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"403":{"description":"Forbidden - User does not have ADMIN role","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"User account not found with the given UUID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"400":{"description":"Invalid input data (e.g., password validation failed)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/tags":{"get":{"tags":["Admin Tag Management"],"summary":"List all tags (paginated)","description":"Retrieves a paginated list of all tags available in the system.","operationId":"getAllTags","parameters":[{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=name,asc). Default sort is by name ascending.","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageTagAdminViewDTO"}}}},"200":{"description":"Successfully retrieved list of tags.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageTagAdminViewDTO"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Admin Tag Management"],"summary":"Create a new tag","description":"Allows an administrator to create a new tag.","operationId":"createTag","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagCreationRequestDTO"}}},"required":true},"responses":{"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"type":"object"}}}},"201":{"description":"Tag created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagAdminViewDTO"}}}},"400":{"description":"Invalid input data (e.g., validation error, tag name already exists)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/images/upload":{"post":{"tags":["Admin Image Management"],"summary":"Upload a new image by an administrator","description":"Allows an administrator to upload an image. The image is stored, a database record is created, and the specified creator's (or admin's if not specified) storage quota is updated. Requires ADMIN role.","operationId":"uploadImageByAdmin","parameters":[{"name":"creatorId","in":"query","description":"(Optional) UUID of the user to be credited with the upload. If omitted, the uploading admin is credited.","required":false,"schema":{"type":"string"}}],"requestBody":{"description":"Multipart request containing the image file and optional creator ID.","content":{"multipart/form-data":{"schema":{"required":["imageFile"],"type":"object","properties":{"imageFile":{"type":"string","description":"The image file to upload.","format":"binary"}}}}},"required":true},"responses":{"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"type":"object"}}}},"413":{"description":"Payload Too Large - Upload exceeds storage quota.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"400":{"description":"Bad Request - Invalid input (e.g., no file, invalid file type, invalid creatorId format, creatorId not found).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"201":{"description":"Image uploaded successfully and record created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImageStorageAdminViewDTO"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"type":"object"}}}},"500":{"description":"Internal Server Error - Unexpected error during processing.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/files/images/{filename}":{"get":{"tags":["File Management API"],"summary":"Download an image file","description":"Provides public access to download a previously uploaded image file by its filename.","operationId":"downloadImageFile","parameters":[{"name":"filename","in":"path","description":"Filename of the image to download.","required":true,"schema":{"type":"string"},"example":"example.jpg"}],"responses":{"200":{"description":"File downloaded successfully","content":{"application/octet-stream":{}}},"404":{"description":"File not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}}}},"/api/reports/users/sessions":{"get":{"tags":["Game Reports API"],"summary":"Get current authenticated user's game session history.","description":"Retrieves a consolidated history of game sessions the authenticated user has hosted or participated in. Requires JWT authentication.","operationId":"getCurrentUserSessionHistory","parameters":[{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=time,desc). 'time' refers to session start time.","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"401":{"description":"User not authenticated.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageUserSessionHistoryItemDto"}}}},"200":{"description":"User's session history retrieved successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}}},"security":[{"bearerAuth":[]}]}},"/api/reports/sessions/{sessionId}/summary":{"get":{"tags":["Game Reports API"],"summary":"Get a summary report for a specific game session.","description":"Provides an overview of a completed game session, including general statistics, quiz information, and host details.","operationId":"getSessionSummary","parameters":[{"name":"sessionId","in":"path","description":"UUID of the game session to retrieve the summary for.","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Session summary retrieved successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SessionSummaryDto"}}}},"404":{"description":"Game session or related data not found.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/SessionSummaryDto"}}}}}}},"/api/reports/sessions/{sessionId}/questions":{"get":{"tags":["Game Reports API"],"summary":"Get a paginated list of question reports for a specific game session.","description":"Retrieves question details and aggregated player performance for each question in a session. Supports pagination and sorting by slide index.","operationId":"getQuestionReports","parameters":[{"name":"sessionId","in":"path","description":"UUID of the game session.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=slideIndex,asc)","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"Question reports retrieved successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}},"404":{"description":"Game session not found.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageQuestionReportItemDto"}}}}}}},"/api/reports/sessions/{sessionId}/players":{"get":{"tags":["Game Reports API"],"summary":"Get a paginated list of player reports for a specific game session.","description":"Retrieves player performance data for a given session, including rank, score, accuracy, and timing. Supports pagination and sorting.","operationId":"getPlayerReports","parameters":[{"name":"sessionId","in":"path","description":"UUID of the game session.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=totalPoints,desc)","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"Player reports retrieved successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}},"404":{"description":"Game session not found.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PagePlayerReportItemDto"}}}}}}},"/api/reports/sessions/{sessionId}/players/{playerId}/answers":{"get":{"tags":["Game Reports API"],"summary":"Get a paginated list of a specific player's answers for a game session.","description":"Retrieves all answers submitted by a particular player in a session, along with the context of each question. Supports pagination and sorting by question index.","operationId":"getPlayerAnswersReport","parameters":[{"name":"sessionId","in":"path","description":"UUID of the game session.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"playerId","in":"path","description":"UUID of the player.","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=blockIndex,asc)","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"404":{"description":"Game session or player not found, or player does not belong to the session.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PagePlayerAnswerReportItemDto"}}}},"200":{"description":"Player's answers retrieved successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}}}}},"/api/quizzes/{quizId}":{"get":{"tags":["Quiz Management API"],"summary":"Get full quiz details by ID","description":"Retrieves a specific quiz. Access is conditional: Public quizzes (visibility=1) require authentication. Private quizzes (visibility=0) require the requester to be the owner.","operationId":"getQuizDetailsById","parameters":[{"name":"quizId","in":"path","description":"ID of the quiz to retrieve","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"404":{"description":"Quiz not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/QuizDTO"}}}},"401":{"description":"Authentication required","content":{"*/*":{"schema":{"$ref":"#/components/schemas/QuizDTO"}}}},"403":{"description":"Forbidden - Not authorized to view this quiz","content":{"*/*":{"schema":{"$ref":"#/components/schemas/QuizDTO"}}}},"200":{"description":"Quiz details found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuizDTO"}}}}}},"delete":{"tags":["Quiz Management API"],"summary":"Delete a quiz by ID","description":"Deletes a quiz, its questions, associated tags, and all related images from storage. User storage quota will be updated.","operationId":"deleteQuiz","parameters":[{"name":"quizId","in":"path","description":"ID of the quiz to delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"404":{"description":"Quiz not found"},"204":{"description":"Quiz deleted successfully"},"403":{"description":"Forbidden - User not authorized to delete this quiz"}},"security":[{"bearerAuth":[]}]}},"/api/quizzes/public":{"get":{"tags":["Quiz Management API"],"summary":"Get public and published quizzes","description":"Retrieves a paginated list of quizzes that are marked as public (visibility=1) and published (status='PUBLISHED').","operationId":"getPublicPublishedQuizzes","parameters":[{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=createdAt,desc)","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"List of public quizzes retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}}}}},"/api/quizzes/my-quizzes":{"get":{"tags":["Quiz Management API"],"summary":"Get quizzes created by the current user","description":"Retrieves a paginated list of quizzes created by the currently authenticated user.","operationId":"getCurrentUserQuizzes","parameters":[{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=modifiedAt,desc)","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"401":{"description":"Unauthorized - User not logged in","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageQuizDTO"}}}},"200":{"description":"List of user's quizzes retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/reports/sessions":{"get":{"tags":["Admin Game Reports API"],"summary":"List all game session reports (paginated)","description":"Retrieves a paginated list of all game session summaries. Default sort is by session end time, most recent first.","operationId":"getAllSessionReports","parameters":[{"name":"pageable","in":"query","description":"Pagination and sorting parameters. Sortable fields on GameSession: 'sessionId', 'gamePin', 'hostId', 'quizId', 'startedAt', 'endedAt', 'gameType', 'playerCount', 'status', 'createdAt'.","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"200":{"description":"Successfully retrieved list of session summaries.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}},"401":{"description":"Unauthorized.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageSessionSummaryDto"}}}},"403":{"description":"Forbidden.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageSessionSummaryDto"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/images":{"get":{"tags":["Admin Image Management"],"summary":"List all images (paginated)","description":"Retrieves a paginated list of all image records available in the system. Requires ADMIN role.","operationId":"getAllImages","parameters":[{"name":"pageable","in":"query","description":"Pagination and sorting parameters (e.g., page=0&size=10&sort=createdAt,desc)","required":true,"schema":{"$ref":"#/components/schemas/Pageable"}}],"responses":{"403":{"description":"Forbidden - User does not have ADMIN role.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageImageStorageAdminViewDTO"}}}},"200":{"description":"Successfully retrieved list of images.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}},"401":{"description":"Unauthorized - JWT token is missing or invalid.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageImageStorageAdminViewDTO"}}}}},"security":[{"bearerAuth":[]}]}},"/api/admin/reports/sessions/{sessionId}":{"delete":{"tags":["Admin Game Reports API"],"summary":"Delete a game session report by ID","description":"Deletes a specific game session and all its associated data (players, slides, answers). This action also decrements the play count of the associated quiz.","operationId":"deleteGameSessionReport","parameters":[{"name":"sessionId","in":"path","description":"UUID of the game session report to delete.","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"204":{"description":"Game session report deleted successfully (alternative if no body).","content":{"*/*":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"401":{"description":"Unauthorized.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"200":{"description":"Game session report deleted successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"403":{"description":"Forbidden.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}},"404":{"description":"Game session report not found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponse"}}}}},"security":[{"bearerAuth":[]}]}}},"components":{"schemas":{"UserAccountUpdateRequestDTO":{"type":"object","properties":{"username":{"maxLength":50,"minLength":3,"type":"string","description":"New username for the account. If null, username will not be changed.","nullable":true,"example":"updated_user"},"email":{"maxLength":200,"minLength":0,"type":"string","description":"New email address for the account. If null, email will not be changed.","nullable":true,"example":"updated.user@example.com"},"role":{"type":"string","description":"New role for the account (e.g., 'TEACHER', 'ADMIN'). If null, role will not be changed.","nullable":true,"example":"ADMIN"},"storageLimit":{"type":"integer","description":"New storage limit for the user in bytes. If null, storage limit will not be changed.","format":"int64","nullable":true,"example":104857600}},"description":"Request DTO for an administrator to update an existing user account. All fields are optional; only provided fields will be considered for update."},"MessageResponse":{"type":"object","properties":{"message":{"type":"string"}}},"UserAccountAdminViewDTO":{"type":"object","properties":{"userId":{"type":"string","description":"Unique identifier of the user account.","format":"uuid","example":"a1b2c3d4-e5f6-7890-1234-567890abcdef"},"username":{"type":"string","description":"Username of the user.","example":"admin_user"},"email":{"type":"string","description":"Email address of the user.","example":"admin@example.com"},"role":{"type":"string","description":"Role assigned to the user.","example":"ADMIN"},"storageUsed":{"type":"integer","description":"Storage space used by the user in bytes.","format":"int64","example":102400},"storageLimit":{"type":"integer","description":"Maximum storage space allocated to the user in bytes.","format":"int64","example":52428800},"createdAt":{"type":"string","description":"Timestamp of when the user account was created.","format":"date-time"},"updatedAt":{"type":"string","description":"Timestamp of the last update to the user account.","format":"date-time"},"deletedAt":{"type":"string","description":"Timestamp of when the user account was soft-deleted. Null if not deleted.","format":"date-time","nullable":true}},"description":"Data Transfer Object for viewing user account details by an administrator."},"TagUpdateRequestDTO":{"type":"object","properties":{"name":{"maxLength":100,"minLength":1,"type":"string","description":"The new name of the tag. If null or blank, the name will not be changed.","example":"Advanced Programming"},"description":{"maxLength":255,"minLength":0,"type":"string","description":"The new optional description for the tag. If null, the description will not be changed.","example":"Tags for advanced programming topics."}},"description":"Request DTO for updating an existing Tag by an administrator."},"TagAdminViewDTO":{"type":"object","properties":{"tagId":{"type":"string","description":"Unique identifier of the tag.","format":"uuid"},"name":{"type":"string","description":"Name of the tag.","example":"History"},"description":{"type":"string","description":"Description of the tag.","example":"Quizzes related to historical events."},"createdAt":{"type":"string","description":"Timestamp of when the tag was created.","format":"date-time"},"updatedAt":{"type":"string","description":"Timestamp of the last update to the tag.","format":"date-time"}},"description":"DTO for viewing Tag details by an administrator."},"ImageStorageUpdateDTO":{"type":"object","properties":{"originalFileName":{"maxLength":255,"minLength":0,"type":"string","description":"The new original filename for the image. If provided and not blank, the existing filename will be updated. If null or blank, the filename will not be changed.","nullable":true,"example":"new_image_filename.jpg"}},"description":"JSON object containing the image metadata fields to update. Only 'originalFileName' is supported in this version. Provide a non-blank string to update, or omit/null to keep existing."},"ImageStorageAdminViewDTO":{"type":"object","properties":{"imageId":{"type":"string","description":"Unique identifier of the image record.","format":"uuid","example":"a1b2c3d4-e5f6-7890-1234-567890abcdef"},"originalFileName":{"type":"string","description":"Original filename of the uploaded image.","example":"profile_picture.jpg"},"storedFileName":{"type":"string","description":"Stored filename (unique identifier) of the image on the server.","example":"unique-id-123.jpg"},"publicUrl":{"type":"string","description":"Publicly accessible URL for the image.","example":"http://localhost:8080/files/images/unique-id-123.jpg"},"contentType":{"type":"string","description":"Content type of the image.","example":"image/jpeg"},"fileSize":{"type":"integer","description":"Size of the image file in bytes.","format":"int64","example":102400},"creatorId":{"type":"string","description":"UUID of the user who created/uploaded the image.","format":"uuid","nullable":true,"example":"f47ac10b-58cc-4372-a567-0e02b2c3d479"},"creatorUsername":{"type":"string","description":"Username of the user who created/uploaded the image.","nullable":true,"example":"admin_user"},"createdAt":{"type":"string","description":"Timestamp of when the image record was created.","format":"date-time"},"updatedAt":{"type":"string","description":"Timestamp of the last update to the image record.","format":"date-time"}},"description":"Data Transfer Object for viewing ImageStorage details by an administrator."},"JsonNode":{"type":"object","description":"Snapshot of the question data as it was distributed or shown during the game. Structure depends on the question type.","nullable":true},"SessionFinalizationDto":{"required":["allowLateJoin","finalPlayerCount","finalSessionStatus","gamePin","gameSlides","gameType","hostUserId","players","powerUpsEnabled","quizId"],"type":"object","properties":{"gamePin":{"type":"string","description":"The game PIN of the session.","example":"195970"},"quizId":{"type":"string","description":"UUID of the quiz that was played.","example":"6b14fbae-7e64-4a38-a7ee-5c56c1224825"},"hostUserId":{"type":"string","description":"User ID of the host who ran the session. If invalid, backend will use authenticated user.","example":"host-1746977232792"},"sessionStartTime":{"type":"integer","description":"Unix timestamp (in milliseconds) when the session started.","format":"int64","nullable":true,"example":1746977232795},"sessionEndTime":{"type":"integer","description":"Unix timestamp (in milliseconds) when the session ended.","format":"int64","nullable":true,"example":1746977337440},"gameType":{"type":"string","description":"Type of game session (e.g., 'LIVE', 'ASSIGNMENT').","example":"LIVE"},"finalPlayerCount":{"type":"integer","description":"The final count of players in the session.","format":"int32","example":3},"finalSessionStatus":{"type":"string","description":"The final status of the session (e.g., 'LOBBY', 'RUNNING', 'ENDED', 'ABORTED').","example":"ENDED"},"allowLateJoin":{"type":"boolean","description":"Flag indicating if late joins were allowed.","example":true},"powerUpsEnabled":{"type":"boolean","description":"Flag indicating if power-ups were enabled for the session.","example":false},"terminationReason":{"type":"string","description":"Reason for session termination, if applicable.","nullable":true,"example":"Host aborted game"},"terminationSlideIndex":{"type":"integer","description":"Index of the slide where termination occurred, if applicable.","format":"int32","nullable":true,"example":2},"players":{"type":"array","description":"Array containing final results and details for each player.","items":{"$ref":"#/components/schemas/SessionPlayerDto"}},"gameSlides":{"type":"array","description":"Array containing information and all player answers for each slide presented during the session.","items":{"$ref":"#/components/schemas/SessionGameSlideDto"}}},"description":"Main DTO containing all data for finalizing a game session and storing its results."},"SessionGameSlideDto":{"required":["playerAnswers","slideIndex","slideType","status"],"type":"object","properties":{"slideIndex":{"type":"integer","description":"0-based index of this slide in the game sequence.","format":"int32","example":0},"slideType":{"type":"string","description":"Type of the slide (e.g., 'QUESTION_SLIDE', 'CONTENT_SLIDE', 'LEADERBOARD').","example":"CONTENT_SLIDE"},"status":{"type":"string","description":"Final status of the slide (e.g., 'ENDED', 'SKIPPED').","example":"ENDED"},"startedAt":{"type":"integer","description":"Unix timestamp (in milliseconds) when this slide started being displayed.","format":"int64","nullable":true,"example":1746977275478},"endedAt":{"type":"integer","description":"Unix timestamp (in milliseconds) when this slide finished being displayed.","format":"int64","nullable":true,"example":1746977276996},"originalQuestionId":{"type":"string","description":"Optional UUID of the original question from the quiz definition, if this slide was a question.","nullable":true,"example":"4188076c-c648-4e7a-9bb0-fe8e5e5ce1a4"},"playerAnswers":{"type":"array","description":"Array of answers submitted by players for this specific slide. Empty for non-question slides or if no answers were given.","items":{"$ref":"#/components/schemas/SessionPlayerAnswerDto"}},"questionDistributionJson":{"$ref":"#/components/schemas/JsonNode"}},"description":"Represents the state and data of a single slide shown during the game session."},"SessionPlayerAnswerDto":{"required":["answerTimestamp","basePoints","clientId","finalPoints","questionIndex","reactionTimeMs","status"],"type":"object","properties":{"clientId":{"type":"string","description":"Player's 'cid', used by backend to link to the correct player_id.","example":"dc7dfc5b-daf4-f812-a89b-2d786dc0b70b"},"questionIndex":{"type":"integer","description":"0-based index of the game slide this answer pertains to (used for frontend reference, backend links via slideId).","format":"int32","example":1},"choice":{"$ref":"#/components/schemas/JsonNode"},"text":{"type":"string","description":"Raw text input from the player, if applicable (e.g., for open-ended questions).","nullable":true,"example":"Paris"},"reactionTimeMs":{"type":"integer","description":"Time taken by the player to submit the answer, in milliseconds.","format":"int32","example":2630},"answerTimestamp":{"type":"integer","description":"Unix timestamp (in milliseconds) when the answer was submitted.","format":"int64","example":1746977279627},"status":{"type":"string","description":"Status of the answer (e.g., 'CORRECT', 'WRONG', 'TIMEOUT', 'SKIPPED').","example":"CORRECT"},"basePoints":{"type":"integer","description":"Points awarded for the answer before any multipliers or power-ups.","format":"int32","example":956},"finalPoints":{"type":"integer","description":"Final points awarded for the answer after all calculations.","format":"int32","example":956},"usedPowerUpId":{"type":"string","description":"Optional UUID of the power-up used by the player for this answer.","nullable":true,"example":"power-up-uuid"},"usedPowerUpContextJson":{"$ref":"#/components/schemas/JsonNode"}},"description":"Represents a specific answer by a player for a specific game slide."},"SessionPlayerDto":{"required":["answerCount","clientId","correctAnswers","joinedAt","lastActivityAt","nickname","status","streakCount","totalScore","totalTime","unansweredCount"],"type":"object","properties":{"clientId":{"type":"string","description":"The WebSocket client ID used by the player during the session.","example":"dc7dfc5b-daf4-f812-a89b-2d786dc0b70b"},"nickname":{"type":"string","description":"Player's chosen nickname.","example":"Player 01"},"userId":{"type":"string","description":"Optional UUID of the player if they were logged into a user account.","nullable":true,"example":"user-uuid-if-any"},"status":{"type":"string","description":"Final status of the player (e.g., 'FINISHED', 'KICKED').","example":"FINISHED"},"joinedAt":{"type":"integer","description":"Unix timestamp (in milliseconds) when the player joined.","format":"int64","example":1746977241731},"joinSlideIndex":{"type":"integer","description":"Slide index when the player joined (if joined late).","format":"int32","nullable":true,"example":-1},"waitingSince":{"type":"integer","description":"Unix timestamp (in milliseconds) when player started waiting, if applicable.","format":"int64","nullable":true},"rank":{"type":"integer","description":"Final rank of the player in the session.","format":"int32","nullable":true,"example":1},"totalScore":{"type":"integer","description":"Final total score achieved by the player.","format":"int32","example":2673},"correctAnswers":{"type":"integer","description":"Total number of correctly answered questions.","format":"int32","example":3},"streakCount":{"type":"integer","description":"Maximum answer streak achieved by the player.","format":"int32","example":2},"answerCount":{"type":"integer","description":"Total number of questions answered (correctly or incorrectly).","format":"int32","example":5},"unansweredCount":{"type":"integer","description":"Total number of questions not answered (timeout/skipped).","format":"int32","example":1},"totalTime":{"type":"integer","description":"Sum of reaction times (in milliseconds) for all answered questions.","format":"int64","example":14736},"lastActivityAt":{"type":"integer","description":"Unix timestamp (in milliseconds) of the player's last activity.","format":"int64","example":1746977337388},"avatarId":{"type":"string","description":"Identifier for the player's chosen avatar (e.g., a UUID string or a predefined name).","nullable":true,"example":"avatar-cat-uuid-9i8j"},"deviceInfoJson":{"$ref":"#/components/schemas/JsonNode"}},"description":"Represents the final aggregated results and details for a single player in the session."},"ChoiceDTO":{"required":["correct"],"type":"object","properties":{"answer":{"type":"string","description":"Text content of the answer choice. Used if 'image' is not present for this choice.","example":"True"},"image":{"$ref":"#/components/schemas/ImageDetailDTO"},"correct":{"type":"boolean","description":"Indicates if this choice is a correct answer."}},"description":"Represents an answer choice for a question"},"ImageDetailDTO":{"type":"object","properties":{"url":{"type":"string","description":"Direct URL (file_path) to the image. This is provided in requests and responses.","example":"https://placehold.co/200x200/blue/white?text=Square"},"altText":{"type":"string","description":"Alternative text for the image","example":"A Square"},"contentType":{"type":"string","description":"Content type of the image. Optional, backend might infer or retrieve if image is internal.","example":"image/png"}},"description":"Details of an image, often used within question choices. The URL is the primary field."},"QuestionDTO":{"required":["title","type"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the question (generated by backend for response)","format":"uuid"},"type":{"type":"string","description":"Type of the question block","example":"quiz","enum":["content","quiz","jumble","survey","open_ended"]},"title":{"type":"string","description":"The question text, or title for 'content' type slides. Can contain HTML.","example":"Which technology is NOT part of the frontend stack?"},"description":{"type":"string","description":"Detailed description, primarily for 'content' type slides.","example":"This section will test your knowledge..."},"time":{"type":"integer","description":"Time limit for the question in milliseconds. Not applicable for 'content' type.","format":"int32","example":30000},"pointsMultiplier":{"type":"integer","description":"Points multiplier for the question. Not applicable for 'content' or 'survey' types.","format":"int32","example":1},"choices":{"type":"array","description":"List of choices for the question. Structure depends on the question type. Not applicable for 'content' type where it can be null/empty.","items":{"$ref":"#/components/schemas/ChoiceDTO"}},"image":{"type":"string","description":"URL (file_path) of the main image associated with the question. Provided in responses after upload.","nullable":true,"example":"https://your-server/files/images/unique_q_key_789.png"},"video":{"$ref":"#/components/schemas/VideoDetailDTO"},"media":{"type":"array","description":"Array for additional media elements (e.g., URLs or structured objects). For now, simple strings.","example":[],"items":{"type":"string","description":"Array for additional media elements (e.g., URLs or structured objects). For now, simple strings.","example":"[]"}},"position":{"type":"integer","description":"0-based order/position of this question within the quiz. If omitted, it will be assigned based on array order.","format":"int32","example":1},"questionImageUploadKey":{"type":"string","description":"Unique key generated by the client to associate with this question's image file part in a multipart request. Used during quiz creation if an image for this question is uploaded.","nullable":true,"example":"q1_img_ref_abc"}},"description":"Represents a single question or content slide within a quiz"},"QuizDTO":{"required":["questions","title"],"type":"object","properties":{"visibility":{"type":"integer","description":"Visibility status (e.g., 1 for public, 0 for private)","format":"int32","example":1},"title":{"type":"string","description":"Quiz title","example":"Sample Quiz - All Question Types"},"description":{"type":"string","description":"Quiz description","example":"This quiz contains one example of each question type for frontend mocking purposes."},"quizType":{"type":"string","description":"General type of the quiz, from mock's 'quizType'. Consider if this maps to a Quiz 'status' or a dedicated field.","example":"quiz"},"questions":{"type":"array","description":"Array of Question Objects","items":{"$ref":"#/components/schemas/QuestionDTO"}},"questionCount":{"type":"integer","description":"The number of questions in this quiz. Populated by the backend.","format":"int32","example":10},"playCount":{"type":"integer","description":"Number of times the quiz has been played. Populated by backend.","format":"int32","example":150},"isValid":{"type":"boolean","description":"Server-side validation flag (populated by backend for responses)","example":true},"playAsGuest":{"type":"boolean","description":"Flag indicating if guests can play (game session property, not quiz typically)","example":true},"status":{"type":"string","description":"Status of the quiz (e.g., DRAFT, PUBLISHED). If not provided in request, defaults to DRAFT.","example":"DRAFT"},"type":{"type":"string","description":"Redundant type field from mock? Matches mock's 'type' field.","example":"quiz"},"created":{"type":"integer","description":"Creation timestamp (Unix millis, populated by backend for responses)","format":"int64","example":1678886400000},"modified":{"type":"integer","description":"Last modified timestamp (Unix millis, populated by backend for responses)","format":"int64","example":1745286000000},"tags":{"type":"array","description":"List of tag names associated with the quiz. Provided during creation, included in responses.","example":["Science","2019","Trivia"],"items":{"type":"string","description":"List of tag names associated with the quiz. Provided during creation, included in responses.","example":"[\"Science\",\"2019\",\"Trivia\"]"}},"totalQuizTimeLimitMs":{"type":"integer","description":"Calculated total time limit (in milliseconds) for all questions in the quiz. Only present in specific responses like /my-quizzes.","format":"int32","nullable":true,"example":300000},"uuid":{"type":"string","description":"Unique Quiz Identifier (generated by backend for responses)","format":"uuid"},"creator":{"type":"string","description":"User ID of the creator (set by backend based on authenticated user)","format":"uuid","example":"39567e72-f833-4bcc-80b0-0c2b02d6c921"},"creator_username":{"type":"string","description":"Username of the creator (populated by backend for responses)","example":"MockUser"},"cover":{"type":"string","description":"URL (file_path) of the cover image for the quiz. Provided in responses after upload.","nullable":true,"example":"https://your-server/files/images/unique_cover_key_123xyz.jpg"},"coverImageUploadKey":{"type":"string","description":"Unique key generated by the client to associate with the cover image file part in a multipart request. Used during quiz creation if a cover image is uploaded.","nullable":true,"example":"cover_img_ref_1"},"lobby_video":{"$ref":"#/components/schemas/VideoDetailDTO"}},"description":"Represents a Quiz, used for both creation requests and responses"},"VideoDetailDTO":{"type":"object","properties":{"id":{"type":"string","description":"Video ID from the service (e.g., YouTube video ID)","example":"dQw4w9WgXcQ"},"startTime":{"type":"number","description":"Start time for the video playback in seconds","format":"double","example":0.0},"endTime":{"type":"number","description":"End time for the video playback in seconds","format":"double","example":0.0},"service":{"type":"string","description":"Video service provider","example":"youtube"},"fullUrl":{"type":"string","description":"Full URL to the video (can be derived if ID and service are known)","example":"https://www.youtube.com/watch?v=dQw4w9WgXcQ"}},"description":"Details for a video (e.g., YouTube)"},"SignupRequest":{"required":["password","username"],"type":"object","properties":{"username":{"maxLength":50,"minLength":3,"type":"string","description":"Desired username for the new account","example":"newuser"},"email":{"maxLength":200,"minLength":0,"type":"string","description":"Email address for the new account","example":"newuser@example.com"},"password":{"maxLength":30,"minLength":6,"type":"string","description":"Password for the new account","example":"securePassword123"}},"description":"Request payload for user registration"},"LoginRequest":{"required":["password","username"],"type":"object","properties":{"username":{"type":"string","description":"Username of the user","example":"testuser"},"password":{"type":"string","description":"Password of the user","example":"password123"}}},"JwtResponse":{"type":"object","properties":{"token":{"type":"string"},"type":{"type":"string"},"id":{"type":"string","format":"uuid"},"username":{"type":"string"},"email":{"type":"string"},"roles":{"type":"array","items":{"type":"string"}}}},"UserAccountCreationRequestDTO":{"required":["password","role","username"],"type":"object","properties":{"username":{"maxLength":50,"minLength":3,"type":"string","description":"Desired username for the new account.","example":"new_teacher"},"email":{"maxLength":200,"minLength":0,"type":"string","description":"Email address for the new account. Optional.","example":"new.teacher@example.com"},"password":{"maxLength":30,"minLength":6,"type":"string","description":"Password for the new account.","example":"password123"},"role":{"type":"string","description":"Role to assign to the new user (e.g., 'TEACHER', 'ADMIN').","example":"TEACHER"}},"description":"Request DTO for an administrator to create a new user account."},"AdminSetPasswordRequestDTO":{"required":["newPassword"],"type":"object","properties":{"newPassword":{"maxLength":30,"minLength":6,"type":"string","description":"The new password for the user account.","example":"newSecurePassword123"}},"description":"Request DTO for an administrator to set a new password for a user account."},"TagCreationRequestDTO":{"required":["name"],"type":"object","properties":{"name":{"maxLength":100,"minLength":1,"type":"string","description":"The name of the tag.","example":"Programming"},"description":{"maxLength":255,"minLength":0,"type":"string","description":"Optional description for the tag.","example":"Tags related to programming languages and concepts."}},"description":"Request DTO for creating a new Tag by an administrator."},"Pageable":{"type":"object","properties":{"page":{"minimum":0,"type":"integer","format":"int32"},"size":{"minimum":1,"type":"integer","format":"int32"},"sort":{"type":"array","items":{"type":"string"}}}},"Page":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"type":"object"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"PageableObject":{"type":"object","properties":{"offset":{"type":"integer","format":"int64"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"unpaged":{"type":"boolean"},"paged":{"type":"boolean"},"pageNumber":{"type":"integer","format":"int32"},"pageSize":{"type":"integer","format":"int32"}}},"SortObject":{"type":"object","properties":{"direction":{"type":"string"},"nullHandling":{"type":"string"},"ascending":{"type":"boolean"},"property":{"type":"string"},"ignoreCase":{"type":"boolean"}}},"PageUserSessionHistoryItemDto":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/UserSessionHistoryItemDto"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"UserSessionHistoryItemDto":{"type":"object","properties":{"sessionId":{"type":"string","description":"UUID of the game session.","example":"session-uuid-actual-value"},"name":{"type":"string","description":"Name/Title of the quiz played in this session.","example":"Các loại hình kiểm thử"},"time":{"type":"integer","description":"Unix timestamp (milliseconds) when the session started.","format":"int64","example":1712106460139},"endTime":{"type":"integer","description":"Unix timestamp (milliseconds) when the session ended.","format":"int64","nullable":true,"example":1712107660525},"type":{"type":"string","description":"Type of the game session.","example":"LIVE"},"playerCount":{"type":"integer","description":"Number of players who participated in this session.","format":"int32","example":32},"roleInSession":{"type":"string","description":"The role of the current authenticated user in this specific session.","example":"HOST"},"sessionHostUserId":{"type":"string","description":"UUID of the user who hosted this specific session.","example":"host-user-uuid"},"sessionHostUsername":{"type":"string","description":"Username of the user who hosted this specific session.","example":"tcongmanh2003"},"quizId":{"type":"string","description":"UUID of the quiz used in this session.","example":"quiz-uuid-actual-value"}},"description":"Summary of a game session in a user's history (either hosted or participated)."},"QuizInfo":{"type":"object","properties":{"quizId":{"type":"string","description":"UUID of the quiz.","example":"5c806f2d-a77f-4d7c-ad2c-d48589bb281d"},"title":{"type":"string","description":"Title of the quiz.","example":"Các loại hình kiểm thử"},"creatorUserId":{"type":"string","description":"UUID of the quiz creator.","example":"311c7657-ef5a-40a2-8d06-af9b6b0b54f4"},"creatorUsername":{"type":"string","description":"Username of the quiz creator.","example":"tcongmanh2003"}},"description":"Simplified information about the quiz played."},"SessionSummaryDto":{"type":"object","properties":{"type":{"type":"string","description":"Type of the game session.","example":"LIVE"},"name":{"type":"string","description":"Name/Title of the quiz played.","example":"Các loại hình kiểm thử"},"questionsCount":{"type":"integer","description":"Total number of questions in the quiz.","format":"int32","example":15},"averageAccuracy":{"type":"number","description":"Overall average accuracy of answers across all players and scored questions.","format":"double","example":0.475},"time":{"type":"integer","description":"Unix timestamp (milliseconds) when the session started.","format":"int64","example":1712106460139},"endTime":{"type":"integer","description":"Unix timestamp (milliseconds) when the session ended.","format":"int64","example":1712107660525},"username":{"type":"string","description":"Username of the host who conducted the session.","example":"tcongmanh2003"},"hostId":{"type":"string","description":"UUID of the host user.","example":"311c7657-ef5a-40a2-8d06-af9b6b0b54f4"},"isScored":{"type":"boolean","description":"Indicates if the quiz questions are scored.","example":true},"hasCorrectness":{"type":"boolean","description":"Indicates if questions have a defined correctness (not a survey).","example":true},"scoredBlocksWithAnswersCount":{"type":"integer","description":"Number of question slides for which answers were submitted.","format":"int32","example":15},"averageTime":{"type":"number","description":"Overall average response time (milliseconds) for correct answers to scored questions.","format":"double","example":9926.98},"averageIncorrectAnswerCount":{"type":"number","description":"Average number of incorrect answers per player.","format":"double","example":5.875},"controllersCount":{"type":"integer","description":"Number of players who participated in the session.","format":"int32","example":32},"quizInfo":{"$ref":"#/components/schemas/QuizInfo"}},"description":"Summary report for a completed game session."},"AnswerDistributionDto":{"type":"object","properties":{"answerText":{"type":"string","description":"The text of the answer choice. Could be null if choice is image-based and text not provided.","nullable":true,"example":"Kiểm thử tải trọng"},"choiceIndex":{"type":"integer","description":"The index of this choice in the original question's choice list.","format":"int32","example":0},"status":{"type":"string","description":"The status if this choice was the correct one.","nullable":true,"example":"CORRECT"},"count":{"type":"integer","description":"Number of players who selected this choice.","format":"int32","example":14}},"description":"Represents the distribution of answers for a single choice of a question."},"PageQuestionReportItemDto":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/QuestionReportItemDto"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"QuestionReportItemDto":{"type":"object","properties":{"slideIndex":{"type":"integer","description":"0-based index of this question/slide in the game sequence.","format":"int32","example":0},"title":{"type":"string","description":"Title or text of the question.","example":"Đâu KHÔNG phải là một loại Kiểm thử chức năng?"},"type":{"type":"string","description":"Type of the question (e.g., 'quiz', 'jumble').","example":"quiz"},"description":{"type":"string","description":"Description of the question/slide, if available (e.g., for content slides).","nullable":true},"time":{"type":"integer","description":"Time limit for the question in milliseconds. Null if not applicable.","format":"int32","nullable":true,"example":30000},"pointsMultiplier":{"type":"integer","description":"Points multiplier for the question. Null if not applicable.","format":"int32","nullable":true,"example":1},"choices":{"type":"array","description":"Original choices presented to the player for this question.","items":{"$ref":"#/components/schemas/ChoiceDTO"}},"imageUrl":{"type":"string","description":"Media URL if any was associated with the question.","nullable":true},"video":{"$ref":"#/components/schemas/VideoDetailDTO"},"media":{"type":"array","description":"Array of additional media elements (e.g., URLs or structured objects).","nullable":true,"items":{"type":"string","description":"Array of additional media elements (e.g., URLs or structured objects).","nullable":true}},"totalAnswers":{"type":"integer","description":"Total number of answers submitted for this question.","format":"int32","example":29},"totalAnsweredControllers":{"type":"integer","description":"Number of distinct players who answered this question.","format":"int32","example":29},"averageAccuracy":{"type":"number","description":"Average accuracy for this question (correct answers / total valid answers). Null if not a gradable question.","format":"double","nullable":true,"example":0.4375},"averageTime":{"type":"number","description":"Average time (ms) taken by players to answer this question. Null if not a gradable question or no valid answers.","format":"double","nullable":true,"example":8153.375},"answersDistribution":{"type":"array","description":"Distribution of answers across the choices for this question.","items":{"$ref":"#/components/schemas/AnswerDistributionDto"}}},"description":"Report details and statistics for a single question (block) within a game session."},"PagePlayerReportItemDto":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/PlayerReportItemDto"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"PlayerReportItemDto":{"type":"object","properties":{"nickname":{"type":"string","description":"Player's nickname.","example":"N1_VuTX"},"rank":{"type":"integer","description":"Player's rank in the session.","format":"int32","example":1},"unansweredCount":{"type":"integer","description":"Number of questions the player did not answer (timeout/skipped).","format":"int32","example":0},"averageAccuracy":{"type":"number","description":"Player's average accuracy (correct answers / total answered).","format":"double","example":0.7333},"averagePoints":{"type":"number","description":"Player's average points per answered question.","format":"double","example":709},"totalPoints":{"type":"integer","description":"Player's total accumulated points.","format":"int32","example":10635},"totalTime":{"type":"integer","description":"Player's total reaction time across all answered questions (milliseconds).","format":"int64","example":83907},"averageTime":{"type":"integer","description":"Player's average reaction time per answered question (milliseconds).","format":"int32"},"streakCount":{"type":"integer","description":"Player's longest answer streak.","format":"int32","example":6},"playerId":{"type":"string","description":"Internal Player UUID (primarily for backend use, can be exposed if useful).","example":"player-uuid-here"},"clientId":{"type":"string","description":"Client ID used by the player during the session.","example":"websocket-client-id"},"answersCount":{"type":"integer","description":"Total number of questions the player answered.","format":"int32","example":15},"correctAnswersCount":{"type":"integer","description":"Number of questions the player answered correctly.","format":"int32","example":11}},"description":"Report details for a single player in a game session."},"AnswerDetails":{"type":"object","properties":{"type":{"type":"string","description":"Type of the answer record.","example":"quiz_answer"},"choice":{"type":"string","description":"Index(es) of the choice selected by the player. Could be a single index, or array for jumble/multi-select. Stored as a string.","nullable":true,"example":"2"},"text":{"type":"string","description":"Text input by the player for open-ended questions.","nullable":true},"reactionTime":{"type":"integer","description":"Time taken by the player to submit this answer (milliseconds).","format":"int32","example":7402},"points":{"type":"integer","description":"Points awarded for this specific answer.","format":"int32","example":0},"blockIndex":{"type":"integer","description":"0-based index of the question/slide this answer pertains to.","format":"int32","example":0},"blockType":{"type":"string","description":"Type of the block/question.","example":"quiz"},"status":{"type":"string","description":"Status of the answer (e.g., 'CORRECT', 'WRONG', 'TIMEOUT').","example":"WRONG"}},"description":"Specific details of the player's answer."},"PagePlayerAnswerReportItemDto":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/PlayerAnswerReportItemDto"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"PlayerAnswerReportItemDto":{"type":"object","properties":{"answer":{"$ref":"#/components/schemas/AnswerDetails"},"reportData":{"$ref":"#/components/schemas/QuestionContextData"}},"description":"Details of a single answer provided by a player, including question context."},"QuestionContextData":{"type":"object","properties":{"displayText":{"type":"string","description":"The text displayed to the player for their chosen answer. For multiple choice, this is the text of the chosen option.","nullable":true,"example":"Kiểm thử kiểm soát truy cập"},"blockTitle":{"type":"string","description":"Title/text of the question.","example":"Đâu KHÔNG phải là một loại Kiểm thử chức năng?"},"blockIndex":{"type":"integer","description":"0-based index of this question/slide in the game sequence.","format":"int32","example":0},"blockChoices":{"type":"array","description":"Original choices presented for this question.","items":{"$ref":"#/components/schemas/ChoiceDTO"}}},"description":"Contextual data of the question for which the answer was provided."},"PageQuizDTO":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/QuizDTO"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"PageUserAccountAdminViewDTO":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/UserAccountAdminViewDTO"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"PageTagAdminViewDTO":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/TagAdminViewDTO"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"PageSessionSummaryDto":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/SessionSummaryDto"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}},"PageImageStorageAdminViewDTO":{"type":"object","properties":{"totalPages":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"size":{"type":"integer","format":"int32"},"content":{"type":"array","items":{"$ref":"#/components/schemas/ImageStorageAdminViewDTO"}},"number":{"type":"integer","format":"int32"},"sort":{"type":"array","items":{"$ref":"#/components/schemas/SortObject"}},"first":{"type":"boolean"},"last":{"type":"boolean"},"numberOfElements":{"type":"integer","format":"int32"},"pageable":{"$ref":"#/components/schemas/PageableObject"},"empty":{"type":"boolean"}}}},"securitySchemes":{"bearerAuth":{"type":"http","description":"Enter JWT Bearer token **_only_**","name":"bearerAuth","scheme":"bearer","bearerFormat":"JWT"}}}}